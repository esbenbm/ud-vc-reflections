What happens when you initialize a repository? Why do you need to do it?

	the folder .git is created and probably a few config files is initialized in there. All of this lets git know that files in this folder is part of a repository.


How is the staging area different from the working directory and the repository? What value do you think it offers?
	
	Difference is that files in staging area is "snapshotted", so more under control than in working directory, but not yet cleared for commit to repository. I'm not sure about the value.


How can you use the staging area to make sure you have one commit per logical change?
	
	I can create my commit-message first and have as a headline for the commit and thus for the staging-area pre commit. unstaged changes can then be committed afterwards.


What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	
	If I need to test a feature or structural changes to my code that I am not sure of yet. Branching would keep experimental features separate from "main" branch where bug-fixes and production code can be implemented.

How do the diagrams help you visualize the branch structure?

	THe diagrams makes it easy to see relations between commits and which form branches together and if there are any "unreachable" commits in-between.
	